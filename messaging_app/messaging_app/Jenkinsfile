pipeline {
    agent any

    environment {
        DOCKER_HUB_CREDENTIALS = 'dockerhub-credentials'  // Jenkins Docker Hub credentials ID
        DOCKER_IMAGE_NAME = 'yourdockerusername/messaging_app:latest' // Replace with your Docker Hub username
    }

    stages {
        stage('Checkout Source') {
            steps {
                // ✅ Pulls code from GitHub using credentials
                git branch: 'main', 
                    url: 'https://github.com/Ephraimdebel/alx-backend-python.git',
                    credentialsId: 'github-credentials'
            }
        }

        stage('Install Dependencies') {
            steps {
                // ✅ Installs dependencies from requirements.txt
                sh 'pip3 install -r messaging_app/requirements.txt'
            }
        }

        stage('Run Tests') {
            steps {
                // ✅ Runs pytest
                sh 'pytest --maxfail=1 --disable-warnings -q --junitxml=report.xml'
            }
        }

        stage('Generate Report') {
            steps {
                // ✅ Archive and publish test results
                junit 'report.xml'
            }
        }

        stage('Build Docker Image') {
            steps {
                echo 'Building Docker image...'
                sh "docker build -t $DOCKER_IMAGE_NAME messaging_app/"
            }
        }

        stage('Push Docker Image') {
            steps {
                echo 'Pushing Docker image to Docker Hub...'
                withCredentials([usernamePassword(credentialsId: "$DOCKER_HUB_CREDENTIALS", usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh "echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin"
                    sh "docker push $DOCKER_IMAGE_NAME"
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline finished! Cleaning up...'
        }
    }
}
