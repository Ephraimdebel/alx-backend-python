name: Django CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: test_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping --silent"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_HOST: 127.0.0.1
      DATABASE_PORT: 3306
      DATABASE_NAME: test_db
      DATABASE_USER: root
      DATABASE_PASSWORD: rootpassword

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r messaging_app/requirements.txt
          pip install mysqlclient pytest pytest-django flake8 coverage

      - name: Wait for MySQL
        run: |
          for i in {1..10}; do
            mysqladmin ping -h 127.0.0.1 -uroot -prootpassword && break
            echo "Waiting for MySQL..."
            sleep 5
          done

      - name: Run migrations
        run: |
          python messaging_app/manage.py migrate

      - name: Run linting (flake8)
        run: |
          flake8 messaging_app

      - name: Run tests with coverage
        run: |
          coverage run -m pytest messaging_app --maxfail=1 --disable-warnings -q
          coverage xml -o coverage.xml

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: pytest-report
          path: report.xml

      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage.xml
